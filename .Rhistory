lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank())
ggplot(data = df, aes(x = rownames(df))) +
coord_flip() +
geom_hline(yintercept = 0) +
# scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank())
type(rownames(df))
str(rownames(df))
str(as.numeric(rownames(df)))
str(as.factor(as.numeric(rownames(df))))
ggplot(data = df, aes(x = as.factor(as.numeric(rownames(df)))  )) +
coord_flip() +
geom_hline(yintercept = 0) +
# scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank())
ggplot(data = df, aes(x = rev(as.factor(as.numeric(rownames(df)))  ))) +
coord_flip() +
geom_hline(yintercept = 0) +
# scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank())
ggplot(data = df, aes(x = rev(levels(as.factor(as.numeric(rownames(df)))  )))) +
coord_flip() +
geom_hline(yintercept = 0) +
# scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank())
orders <-
as.tbl(read.csv("data/measure_order.csv", header = T)) %>%
dplyr::mutate(measure = as.character(measure))
df <-
read.csv("output/posterior_output.csv", header = T) %>%
dplyr::filter(param == "geno_effect") %>%
#dplyr::filter(measure %in% c("Bv", "Rt", "Rl")) %>%
dplyr::mutate(`X2.5.` = as.numeric(as.character(`X2.5.`)))  %>%
dplyr::mutate(`X97.5.` = as.numeric(as.character(`X97.5.`)))  %>%
dplyr::mutate(mean = as.numeric(as.character(mean)))  %>%
dplyr::mutate(sd = as.numeric(as.character(sd)))  %>%
dplyr::mutate(`X75.` = as.numeric(as.character(`X75.`)))  %>%
dplyr::mutate(`X25.` = as.numeric(as.character(`X25.`)))  %>%
dplyr::mutate(Pr = as.numeric(as.character(Pr))) %>%
dplyr::mutate(Pr_yn = (Pr > 0.95)) %>%
dplyr::full_join(orders, by = "measure")
df
ggplot(data = df, aes(x = order_desc)) +
coord_flip() +
scale_x_discrete(labels = c(rev(df$measure))) +
# geom_blank(aes(y=-`X97.5.`)) +
# geom_blank(aes(y=-`X2.5.`)) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
#facet_wrap(measure ~ ., scales = "free_x", ncol = 1, strip.position="left") +
#theme(strip.text.y.left = element_text(angle=0)) +
geom_hline(yintercept = 0) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank())
ggplot(data = df, aes(x = order_desc)) +
coord_flip() +
geom_hline(yintercept = 0) +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme()
ggplot(data = df, aes(x = order_desc)) +
coord_flip() +
geom_hline(yintercept = 0) +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme(legend.position = "none",
axis.title.y = element_blank()) +
theme_cowplot()
ggplot(data = df, aes(x = order_desc)) +
coord_flip() +
geom_hline(yintercept = 0) +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme_cowplot() +
theme(legend.position = "none",
axis.title.y = element_blank())
ggplot(data = df, aes(x = order_desc)) +
geom_hline(yintercept = 0) +
coord_flip() +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme_cowplot() +
theme(legend.position = "none",
axis.title.y = element_blank())
ggplot(data = df, aes(x = order_desc)) +
geom_hline(yintercept = 0) +
coord_flip() +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme_cowplot() +
theme(legend.position = "none",
axis.title.y = element_blank())
ggsave(file = "figures/treatment_effect.pdf", height = 8, width = 4)
make_effect_plot <-
function(param_,
outfile){
orders <-
as.tbl(read.csv("data/measure_order.csv", header = T)) %>%
dplyr::mutate(measure = as.character(measure))
df <-
read.csv("output/posterior_output.csv", header = T) %>%
dplyr::filter(param == param_) %>%
#dplyr::filter(measure %in% c("Bv", "Rt", "Rl")) %>%
dplyr::mutate(`X2.5.` = as.numeric(as.character(`X2.5.`)))  %>%
dplyr::mutate(`X97.5.` = as.numeric(as.character(`X97.5.`)))  %>%
dplyr::mutate(mean = as.numeric(as.character(mean)))  %>%
dplyr::mutate(sd = as.numeric(as.character(sd)))  %>%
dplyr::mutate(`X75.` = as.numeric(as.character(`X75.`)))  %>%
dplyr::mutate(`X25.` = as.numeric(as.character(`X25.`)))  %>%
dplyr::mutate(Pr = as.numeric(as.character(Pr))) %>%
dplyr::mutate(Pr_yn = (Pr > 0.95)) %>%
dplyr::full_join(orders, by = "measure")
ggplot(data = df, aes(x = order_desc)) +
geom_hline(yintercept = 0) +
coord_flip() +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme_cowplot() +
theme(legend.position = "none",
axis.title.y = element_blank())
ggsave(file = outfile, height = 8, width = 4)
}
make_effect_plot(param_ = "trt_effect",
outfile = "figures/treatment_effect.pdf")
make_effect_plot <-
function(param_,
outfile){
orders <-
as.tbl(read.csv("data/measure_order.csv", header = T)) %>%
dplyr::mutate(measure = as.character(measure))
df <-
read.csv("output/posterior_output.csv", header = T) %>%
dplyr::filter(param == param_) %>%
#dplyr::filter(measure %in% c("Bv", "Rt", "Rl")) %>%
dplyr::mutate(`X2.5.` = as.numeric(as.character(`X2.5.`)))  %>%
dplyr::mutate(`X97.5.` = as.numeric(as.character(`X97.5.`)))  %>%
dplyr::mutate(mean = as.numeric(as.character(mean)))  %>%
dplyr::mutate(sd = as.numeric(as.character(sd)))  %>%
dplyr::mutate(`X75.` = as.numeric(as.character(`X75.`)))  %>%
dplyr::mutate(`X25.` = as.numeric(as.character(`X25.`)))  %>%
dplyr::mutate(Pr = as.numeric(as.character(Pr))) %>%
dplyr::mutate(Pr_yn = (Pr > 0.95)) %>%
dplyr::full_join(orders, by = "measure")
ggplot(data = df, aes(x = order_desc)) +
geom_hline(yintercept = 0) +
coord_flip() +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme_cowplot() +
theme(legend.position = "none",
axis.title.y = element_blank())
ggsave(file = outfile, height = 8, width = 4)
}
make_effect_plot(param_ = "geno_effect",
outfile = "figures/genotype_effect.pdf")
library(ggplot2)
library(cowplot)
library(dplyr)
param_ = "int_effect"
orders <-
as.tbl(read.csv("data/measure_order.csv", header = T)) %>%
dplyr::mutate(measure = as.character(measure))
df <-
read.csv("output/posterior_output.csv", header = T) %>%
dplyr::filter(param == param_) %>%
#dplyr::filter(measure %in% c("Bv", "Rt", "Rl")) %>%
dplyr::mutate(`X2.5.` = as.numeric(as.character(`X2.5.`)))  %>%
dplyr::mutate(`X97.5.` = as.numeric(as.character(`X97.5.`)))  %>%
dplyr::mutate(mean = as.numeric(as.character(mean)))  %>%
dplyr::mutate(sd = as.numeric(as.character(sd)))  %>%
dplyr::mutate(`X75.` = as.numeric(as.character(`X75.`)))  %>%
dplyr::mutate(`X25.` = as.numeric(as.character(`X25.`)))  %>%
dplyr::mutate(Pr = as.numeric(as.character(Pr))) %>%
dplyr::mutate(Pr_yn = (Pr > 0.95)) %>%
dplyr::full_join(orders, by = "measure")
ggplot(data = df, aes(x = order_desc)) +
geom_hline(yintercept = 0) +
coord_flip() +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme_cowplot() +
theme(legend.position = "none",
axis.title.y = element_blank())
orders <-
as.tbl(read.csv("data/measure_order.csv", header = T)) %>%
dplyr::mutate(measure = as.character(measure))
df <-
read.csv("output/posterior_output.csv", header = T) %>%
dplyr::filter(param == param_) %>%
#dplyr::filter(measure %in% c("Bv", "Rt", "Rl")) %>%
dplyr::mutate(`X2.5.` = as.numeric(as.character(`X2.5.`)))  %>%
dplyr::mutate(`X97.5.` = as.numeric(as.character(`X97.5.`)))  %>%
dplyr::mutate(mean = as.numeric(as.character(mean)))  %>%
dplyr::mutate(sd = as.numeric(as.character(sd)))  %>%
dplyr::mutate(`X75.` = as.numeric(as.character(`X75.`)))  %>%
dplyr::mutate(`X25.` = as.numeric(as.character(`X25.`)))  %>%
dplyr::mutate(Pr = as.numeric(as.character(Pr))) %>%
dplyr::mutate(Pr_yn = (Pr > 0.95)) %>%
dplyr::full_join(orders, by = "measure")
ggplot(data = df, aes(x = order_desc)) +
geom_hline(yintercept = 0) +
coord_flip() +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme_cowplot() +
theme(legend.position = "none",
axis.title.y = element_blank())
dev.off()
orders <-
as.tbl(read.csv("data/measure_order.csv", header = T)) %>%
dplyr::mutate(measure = as.character(measure))
df <-
read.csv("output/posterior_output.csv", header = T) %>%
dplyr::filter(param == param_) %>%
#dplyr::filter(measure %in% c("Bv", "Rt", "Rl")) %>%
dplyr::mutate(`X2.5.` = as.numeric(as.character(`X2.5.`)))  %>%
dplyr::mutate(`X97.5.` = as.numeric(as.character(`X97.5.`)))  %>%
dplyr::mutate(mean = as.numeric(as.character(mean)))  %>%
dplyr::mutate(sd = as.numeric(as.character(sd)))  %>%
dplyr::mutate(`X75.` = as.numeric(as.character(`X75.`)))  %>%
dplyr::mutate(`X25.` = as.numeric(as.character(`X25.`)))  %>%
dplyr::mutate(Pr = as.numeric(as.character(Pr))) %>%
dplyr::mutate(Pr_yn = (Pr > 0.95)) %>%
dplyr::full_join(orders, by = "measure")
ggplot(data = df, aes(x = order_desc)) +
geom_hline(yintercept = 0) +
coord_flip() +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme_cowplot() +
theme(legend.position = "none",
axis.title.y = element_blank())
orders <-
as.tbl(read.csv("data/measure_order.csv", header = T)) %>%
dplyr::mutate(measure = as.character(measure))
df <-
read.csv("output/posterior_output.csv", header = T) %>%
dplyr::filter(param == param_) %>%
#dplyr::filter(measure %in% c("Bv", "Rt", "Rl")) %>%
dplyr::mutate(`X2.5.` = as.numeric(as.character(`X2.5.`)))  %>%
dplyr::mutate(`X97.5.` = as.numeric(as.character(`X97.5.`)))  %>%
dplyr::mutate(mean = as.numeric(as.character(mean)))  %>%
dplyr::mutate(sd = as.numeric(as.character(sd)))  %>%
dplyr::mutate(`X75.` = as.numeric(as.character(`X75.`)))  %>%
dplyr::mutate(`X25.` = as.numeric(as.character(`X25.`)))  %>%
dplyr::mutate(Pr = as.numeric(as.character(Pr))) %>%
dplyr::mutate(Pr_yn = (Pr > 0.95)) %>%
dplyr::full_join(orders, by = "measure")
ggplot(data = df, aes(x = order_desc)) +
geom_hline(yintercept = 0) +
coord_flip() +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme_cowplot() +
theme(legend.position = "none",
axis.title.y = element_blank())
orders <-
as.tbl(read.csv("data/measure_order.csv", header = T)) %>%
dplyr::mutate(measure = as.character(measure))
df <-
read.csv("output/posterior_output.csv", header = T) %>%
dplyr::filter(param == param_) %>%
#dplyr::filter(measure %in% c("Bv", "Rt", "Rl")) %>%
dplyr::mutate(`X2.5.` = as.numeric(as.character(`X2.5.`)))  %>%
dplyr::mutate(`X97.5.` = as.numeric(as.character(`X97.5.`)))  %>%
dplyr::mutate(mean = as.numeric(as.character(mean)))  %>%
dplyr::mutate(sd = as.numeric(as.character(sd)))  %>%
dplyr::mutate(`X75.` = as.numeric(as.character(`X75.`)))  %>%
dplyr::mutate(`X25.` = as.numeric(as.character(`X25.`)))  %>%
dplyr::mutate(Pr = as.numeric(as.character(Pr))) %>%
dplyr::mutate(Pr_yn = (Pr > 0.95)) %>%
dplyr::full_join(orders, by = "measure")
ggplot(data = df, aes(x = order_desc)) +
geom_hline(yintercept = 0) +
coord_flip() +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme_cowplot() +
theme(legend.position = "none",
axis.title.y = element_blank())
orders <-
as.tbl(read.csv("data/measure_order.csv", header = T)) %>%
dplyr::mutate(measure = as.character(measure))
df <-
read.csv("output/posterior_output.csv", header = T) %>%
dplyr::filter(param == param_) %>%
#dplyr::filter(measure %in% c("Bv", "Rt", "Rl")) %>%
dplyr::mutate(`X2.5.` = as.numeric(as.character(`X2.5.`)))  %>%
dplyr::mutate(`X97.5.` = as.numeric(as.character(`X97.5.`)))  %>%
dplyr::mutate(mean = as.numeric(as.character(mean)))  %>%
dplyr::mutate(sd = as.numeric(as.character(sd)))  %>%
dplyr::mutate(`X75.` = as.numeric(as.character(`X75.`)))  %>%
dplyr::mutate(`X25.` = as.numeric(as.character(`X25.`)))  %>%
dplyr::mutate(Pr = as.numeric(as.character(Pr))) %>%
dplyr::mutate(Pr_yn = (Pr > 0.95)) %>%
dplyr::full_join(orders, by = "measure")
ggplot(data = df, aes(x = order_desc)) +
geom_hline(yintercept = 0) +
coord_flip() +
scale_x_discrete(labels = c(rev(df$measure))) +
geom_boxplot(aes(
ymin = `X2.5.`/ sd,
ymax = `X97.5.`/ sd,
middle = mean / sd,
upper = `X75.` / sd,
lower = `X25.` / sd,
fill = Pr_yn
),
stat = "identity"
) +
geom_hline(yintercept = 0) +
theme_cowplot() +
theme(legend.position = "none",
axis.title.y = element_blank())
install.packages("NonlinearAnalysis")
install.packages("nonlinearAnalysis")
install.packages("nonlinearTseries")
nonlinearityTest(c(1,2,3,4,5,6,7), verbose = TRUE)
data(spots)
install.packages("TSA")
TSA::Keenan.test(c(1,2,3,4,5,6,7))
TSA::Keenan.test(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14))
